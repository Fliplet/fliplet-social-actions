/* UPDATE PACKAGE NAME AND VARIABLE PREFIX USING THE SAME VALUES AS "widget.json" */
$packageName: 'com.fliplet.social-icons';
$variablePrefix: "social";

/* ----------------------------------------------------- */

@import "package:com.fliplet.theme.default/scss/core/variables";
@import "package:com.fliplet.theme.default/scss/core/mixins";

@mixin componentStyles($options: (), $widgetInstanceId: "", $widgetInstanceUUID: "") {
  /* LIST HERE ALL VARIABLES FROM YOUR THEME, INCLUDING TABLET AND DESKTOP */
  $configuration: map-merge((social-background: $social-background,
        social-backgroundTablet: $social-backgroundTablet,
        social-backgroundDesktop: $social-backgroundDesktop,
      ),
      $options);

  $instanceSelector: '[data-widget-package="#{$packageName}"]';

  @if $widgetInstanceUUID !="" {
    $instanceSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"]';
  }

  @else if $widgetInstanceId !="" {
    $instanceSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"]';
  }

  #{$instanceSelector} {

    // social-icon full background
      .social-actions {
      // .fa-heart {
        color: map-get($configuration, social-background);

        @include above($tabletBreakpoint) {
          color: map-get($configuration, social-backgroundTablet);
        }

        @include above($desktopBreakpoint) {
          color: map-get($configuration, social-backgroundDesktop);
        }
      }

    // social-icon full background
  }
}

/* Export common styles */
@include componentStyles();

/* Export styles for each widget instance */
@if variable-exists(widgetInstances) {
  @each $widgetInstance in $widgetInstances {
    @if nth($widgetInstance, 2)==$variablePrefix {
      @include componentStyles(nth($widgetInstance, 3), nth($widgetInstance, 1), nth($widgetInstance, 4));
    }
  }
}